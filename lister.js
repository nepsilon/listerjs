// Generated by CoffeeScript 1.6.1
(function() {
  var Lister,
    _this = this;

  Lister = (function() {

    function Lister(el) {
      var _this = this;
      this.el = el;
      this.makeList = function(ev) {
        return Lister.prototype.makeList.apply(_this, arguments);
      };
      console.log(this.el);
      this.el.addEventListener('keyup', this.makeList, false);
    }

    Lister.prototype.makeList = function(ev) {
      var bullet, bullet_length, carret_pos, is_integer, lines, match, new_carret_pos, previous_line_nb;
      lines = this.el.value.split("\n");
      previous_line_nb = (this.getCurrentLineNb(lines)) - 1;
      if (!(previous_line_nb >= 0)) {
        previous_line_nb = 0;
      }
      if (ev.keyCode === 13) {
        carret_pos = this.el.selectionStart;
        match = /^(\s*)([-*]|\d+)(\s+)[\S ]+$/g.exec(lines[previous_line_nb]);
        if (match) {
          is_integer = parseInt(match[2]);
          if (is_integer) {
            bullet = "" + match[1] + (is_integer + 1) + match[3];
          } else {
            bullet = "" + match[1] + match[2] + match[3];
          }
          lines[previous_line_nb + 1] = bullet;
          this.el.value = lines.join("\n");
          new_carret_pos = carret_pos + bullet.length;
          return this.el.setSelectionRange(new_carret_pos, new_carret_pos);
        } else if (lines[previous_line_nb].match(/^\s*([-*]|\d+)\s+$/g)) {
          bullet_length = lines[previous_line_nb].length;
          lines[previous_line_nb] = "";
          this.el.value = lines.join("\n");
          new_carret_pos = carret_pos - bullet_length;
          return this.el.setSelectionRange(new_carret_pos, new_carret_pos);
        }
      }
    };

    Lister.prototype.getCurrentLineNb = function(lines) {
      var carret_pos, cumul_length, curr_line, _ref;
      carret_pos = this.el.selectionStart;
      curr_line = 0;
      cumul_length = lines[0].length + 1;
      while (carret_pos >= cumul_length) {
        curr_line += 1;
        cumul_length += ((_ref = lines[curr_line]) != null ? _ref.length : void 0) + 1;
      }
      return curr_line;
    };

    return Lister;

  })();

  window.Lister = Lister;

}).call(this);
